{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\payal\\\\Downloads\\\\ai-job-assistant (1)\\\\frontend\\\\src\\\\components\\\\JobSeeker\\\\UploadForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ResultCard from './ResultCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadForm = () => {\n  _s();\n  const [resume, setResume] = useState(null);\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!resume) {\n      alert(\"Please select a resume file!\");\n      return;\n    }\n\n    // Optional: Client-side file type validation\n    if (resume && !['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'].includes(resume.type)) {\n      alert(\"Only PDF or DOCX files are allowed.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n    const formData = new FormData();\n    formData.append('resume', resume);\n    try {\n      const res = await axios.post('http://localhost:5000/upload-resume', formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setResult(res.data);\n    } catch (err) {\n      console.error(err);\n      setError(\"There was an error uploading your resume. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto p-6 bg-white rounded-2xl shadow-md mt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-blue-900 mb-4 text-center\",\n      children: \"AI Resume Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".pdf,.docx\",\n        onChange: e => setResume(e.target.files[0]),\n        className: \"mb-4 w-full p-2 border border-gray-300 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-800 hover:bg-blue-900 text-white px-4 py-2 rounded w-full\",\n        disabled: loading,\n        children: loading ? \"Uploading...\" : \"Upload & Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(ResultCard, {\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadForm, \"dp5IT0fMC7AdzXsOcnWBXmNnB4o=\");\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","axios","ResultCard","jsxDEV","_jsxDEV","UploadForm","_s","resume","setResume","result","setResult","loading","setLoading","error","setError","handleUpload","e","preventDefault","alert","includes","type","formData","FormData","append","res","post","headers","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","accept","onChange","target","files","disabled","_c","$RefreshReg$"],"sources":["C:/Users/payal/Downloads/ai-job-assistant (1)/frontend/src/components/JobSeeker/UploadForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport ResultCard from './ResultCard';\n\nconst UploadForm = () => {\n  const [resume, setResume] = useState(null);\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleUpload = async (e) => {\n    e.preventDefault();\n\n    if (!resume) {\n      alert(\"Please select a resume file!\");\n      return;\n    }\n\n    // Optional: Client-side file type validation\n    if (\n      resume &&\n      ![\n        'application/pdf',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n      ].includes(resume.type)\n    ) {\n      alert(\"Only PDF or DOCX files are allowed.\");\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    const formData = new FormData();\n    formData.append('resume', resume);\n\n    try {\n      const res = await axios.post('http://localhost:5000/upload-resume', formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      setResult(res.data);\n    } catch (err) {\n      console.error(err);\n      setError(\"There was an error uploading your resume. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto p-6 bg-white rounded-2xl shadow-md mt-10\">\n      <h1 className=\"text-2xl font-bold text-blue-900 mb-4 text-center\">AI Resume Analyzer</h1>\n      <form onSubmit={handleUpload}>\n        <input\n          type=\"file\"\n          accept=\".pdf,.docx\"\n          onChange={(e) => setResume(e.target.files[0])}\n          className=\"mb-4 w-full p-2 border border-gray-300 rounded\"\n        />\n        <button\n          type=\"submit\"\n          className=\"bg-blue-800 hover:bg-blue-900 text-white px-4 py-2 rounded w-full\"\n          disabled={loading}\n        >\n          {loading ? \"Uploading...\" : \"Upload & Analyze\"}\n        </button>\n      </form>\n\n      {error && <p className=\"text-red-500 mt-4\">{error}</p>}\n      {result && <ResultCard result={result} />}\n    </div>\n  );\n};\n\nexport default UploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}