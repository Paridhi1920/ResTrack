{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\payal\\\\Downloads\\\\ai-job-assistant (1)\\\\frontend\\\\src\\\\components\\\\UploadForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadResume = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [jobDescription, setJobDescription] = useState(\"\");\n\n  // Handle file selection\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  // Handle job description input\n  const handleJobDescriptionChange = event => {\n    setJobDescription(event.target.value);\n  };\n\n  // Handle file upload and API request\n  const handleUpload = async event => {\n    event.preventDefault();\n    if (!selectedFile) {\n      alert(\"Please select a resume file\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"resume\", selectedFile);\n    formData.append(\"job_description\", jobDescription); // Optional, if you want to pass job description\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload-resume', formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Response from server:\", response.data); // This will print the response from Flask backend\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Your Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Enter Job Description\",\n        value: jobDescription,\n        onChange: handleJobDescriptionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadResume, \"4Piiu3MU+5r0tr5qI65bIicNcUo=\");\n_c = UploadResume;\nexport default UploadResume;\nvar _c;\n$RefreshReg$(_c, \"UploadResume\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadResume","_s","selectedFile","setSelectedFile","jobDescription","setJobDescription","handleFileChange","event","target","files","handleJobDescriptionChange","value","handleUpload","preventDefault","alert","formData","FormData","append","response","post","headers","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/payal/Downloads/ai-job-assistant (1)/frontend/src/components/UploadForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst UploadResume = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [jobDescription, setJobDescription] = useState(\"\");\n\n  // Handle file selection\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  // Handle job description input\n  const handleJobDescriptionChange = (event) => {\n    setJobDescription(event.target.value);\n  };\n\n  // Handle file upload and API request\n  const handleUpload = async (event) => {\n    event.preventDefault();\n\n    if (!selectedFile) {\n      alert(\"Please select a resume file\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"resume\", selectedFile);\n    formData.append(\"job_description\", jobDescription); // Optional, if you want to pass job description\n\n    try {\n      const response = await axios.post('http://localhost:5000/upload-resume', formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      console.log(\"Response from server:\", response.data);  // This will print the response from Flask backend\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload Your Resume</h2>\n      <form onSubmit={handleUpload}>\n        <input type=\"file\" onChange={handleFileChange} />\n        <textarea\n          placeholder=\"Enter Job Description\"\n          value={jobDescription}\n          onChange={handleJobDescriptionChange}\n        />\n        <button type=\"submit\">Upload</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UploadResume;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;;EAED;EACA,MAAMC,0BAA0B,GAAIH,KAAK,IAAK;IAC5CF,iBAAiB,CAACE,KAAK,CAACC,MAAM,CAACG,KAAK,CAAC;EACvC,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAOL,KAAK,IAAK;IACpCA,KAAK,CAACM,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACX,YAAY,EAAE;MACjBY,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEf,YAAY,CAAC;IACvCa,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEb,cAAc,CAAC,CAAC,CAAC;;IAEpD,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,qCAAqC,EAAEJ,QAAQ,EAAE;QACjFK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAE;IACxD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3B9B,OAAA;MAAM+B,QAAQ,EAAElB,YAAa;MAAAa,QAAA,gBAC3B1B,OAAA;QAAOgC,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAE1B;MAAiB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjD9B,OAAA;QACEkC,WAAW,EAAC,uBAAuB;QACnCtB,KAAK,EAAEP,cAAe;QACtB4B,QAAQ,EAAEtB;MAA2B;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACF9B,OAAA;QAAQgC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAtDID,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAwDlB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}